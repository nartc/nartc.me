---
import { ClientRouter } from "astro:transitions";
import Avatar from "../components/Avatar.astro";
import Copyright from "../components/Copyright.astro";
import Info from "../components/Info.astro";
import Navigation from "../components/Navigation.astro";
import Socials from "../components/Socials.astro";

export interface Props {
	title: string;
	isBlog?: boolean;
	description?: string;
	ogImage?: string;
	canonicalURL?: string;
	publishedDate?: Date;
	tags?: string[];
}

const {
	title,
	isBlog = false,
	description = "Personal blog by Chau Tran",
	ogImage = "/assets/icons/icon-192x192.png",
	canonicalURL = Astro.url.href,
	publishedDate,
	tags = [],
} = Astro.props;

const siteUrl = Astro.url.origin;
const fullImageUrl = ogImage.startsWith("http")
	? ogImage
	: `${siteUrl}${ogImage}`;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="description" content="Personal blog by Chau Tran" />
		<link rel="icon" type="image/x-icon" href="/assets/icons/favicon.png" />
		<meta name="generator" content={Astro.generator} />

		<!-- Canonical URL -->
		<link rel="canonical" href={canonicalURL} />

		<!-- OpenGraph / Facebook -->
		<meta property="og:type" content={isBlog ? "article" : "website"} />
		<meta property="og:url" content={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={fullImageUrl} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonicalURL} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={fullImageUrl} />

		{/* If it's a blog post, add article specific meta tags */}
		{
			isBlog && publishedDate && (
				<meta
					property="article:published_time"
					content={publishedDate.toISOString()}
				/>
			)
		}
		{
			isBlog &&
				tags.length > 0 &&
				tags.map((tag) => <meta property="article:tag" content={tag} />)
		}

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=DM+Mono:ital,wght@0,300;0,400;0,500;1,300;1,400;1,500&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
			rel="stylesheet"
		/>
		<title>{title}</title>
		<ClientRouter />
	</head>
	<body>
		<div class="container mx-auto h-full p-8">
			{
				isBlog ? (
					<slot />
				) : (
					<div class="grid grid-cols-1 gap-x-4 lg:grid-cols-4">
						<aside class="col-span-4 lg:col-span-1">
							<div class="relative max-w-full overflow-hidden rounded p-4 shadow-common lg:max-w-sm">
								<Avatar />
								<Info />
								<Navigation />
								<Socials />
								<Copyright />
							</div>
						</aside>
						<main class="col-span-4 lg:col-span-3">
							<div class="lg:max-h-228 overflow-hidden rounded p-4 shadow-common lg:overflow-auto">
								<slot />
							</div>
						</main>
					</div>
				)
			}
		</div>
		<style>
			@media (prefers-color-scheme: light) {
				:root {
					--primary: theme("colors.rose.600");
					--secondary: theme("colors.sky.600");
					--background-color: theme("colors.white");
					--text-color: theme("colors.black");
					--gray-light: theme("colors.neutral.500");
					--gray-medium: theme("colors.neutral.600");
					--gray-dark: theme("colors.neutral.700");
					--code-background: theme("colors.gray.200");
					--table-even-row: theme("colors.neutral.200");
					--shadow: theme("boxShadow.lg");
				}
			}

			@media (prefers-color-scheme: dark) {
				:root {
					--primary: theme("colors.sky.400");
					--secondary: theme("colors.rose.400");
					--background-color: theme("colors.neutral.900");
					--text-color: theme("colors.white");
					--gray-light: theme("colors.neutral.500");
					--gray-medium: theme("colors.neutral.400");
					--gray-dark: theme("colors.neutral.300");
					--code-background: theme("colors.gray.800");
					--table-even-row: theme("colors.neutral.700");
					--shadow: 0 10px 15px -3px rgba(255, 255, 255, 0.1),
						0 4px 6px -2px rgba(255, 255, 255, 0.05);
				}
			}

			body {
				background-color: var(--background-color);
				color: var(--text-color);
				transition:
					color 200ms ease-in-out,
					background-color 200ms ease-in-out,
					border-color 200ms ease-in-out,
					fill 200ms ease-in-out,
					stroke 200ms ease-in-out;
			}

			:global(h1) {
				@apply text-5xl;
			}

			:global(h2) {
				@apply text-4xl;
			}

			:global(h3) {
				@apply text-3xl;
			}

			:global(h4) {
				@apply text-2xl;
			}

			:global(h5) {
				@apply text-xl;
			}

			:global(h6) {
				@apply text-lg;
			}

			:global(picture > img.avatar, img.avatar) {
				@apply visible h-full w-full rounded-full object-cover object-center;
			}
			@screen lg {
				body {
					height: 100vh;
				}
			}
		</style>
	</body>
</html>
